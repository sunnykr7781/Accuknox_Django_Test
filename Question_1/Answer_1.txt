Django signals are executed synchronously by default, meaning the sender waits for the receivers to finish before continuing. To prove this, I created a custom signal in my accuknox project and added a receiver with a 2-second delay using time.sleep(2). In a view, I triggered the signal with my_signal.send() and measured the time. When I visited http://127.0.0.1:8000/test/, the terminal showed the total execution time as ~2 seconds (Signal sent, took 2.01 seconds). This delay confirms the sender waited for the receiver, proving synchronous execution. If it were asynchronous, the sender would finish immediately, which didnâ€™t happen here.
